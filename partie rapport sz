Ce projet est soumis a une condition principale, tres nouvelle pour nous : faire coexister le langage C avec le OCaml. Le partage entre les deux doit etre relativement equitable tout au long du programme. En fait, lors du projet precedent nous avons deja eu l'occasion de faire dialoguer les deux langages, via l'utilisation de GTK (ecrit en C), notamment pour l'interface.
Ceci a donc ete la principale raison qui nous a pousse a faire l'interface de ce projet-ci en Caml. L'interface entierement en OCaml doit donc appeler des fonctions, comme la lecture d'un fichier, en C.
Tous les types OCaml sont exportés dans le monde C avec le type unique "value". On convertit ensuite les valeurs de ce type en données manipulables par le C, et on renvoie une valeur qui, elle aussi, doit être de type "value". Le code C et le code OCaml sont placés dans des fichiers séparés qui diffèrent par leur nom. En effet, a la compilation, deux fichiers .o seront generes ayant le meme nom, un pour la version en Ocaml et l'autre en C. Ceci posera alors probleme. On ne fait que appeller du C a partir du OCaml.

Comme il a ete dit plus haut, c'est l'interface qui est codee en OCaml. C'est lorsque l'utilisateur veut lire une musique que le programme appelle une fonction en C. Le bouton "play" de l'interface, code en Ocaml, appelle une fonction en C dans un autre fichier qui va lire le fichier musical choisi.

L'un des problemes majeurs auxquel nous avons ete confronte fut la compilation. En effet, puisque nous utilisons une libraire externe, FMOD donc, nous n'avons pas pu faire le lien directement via les commandes de compilations habituelles, notamment l'utilisation des .o, car OCamlc ne peut utiliser en meme temps les .o et les .so (produit par FMOD) pour produire les executables. Il a donc fallu mettre notre code C dans sa propre librairie qui sert de lien avec l'OCaml, la compilation integrant notre librairie de liens.


Ce qu'il reste a faire:

Pour le moment, le lecteur n'execute que sa fonction vitale : lire un fichier de musique. Bien sur de nombreuses autres possibilites restent a inclure comme la possibilite de mettre en pause ou carrement d'arreter la lecture. Tout cela sera gere en lien entre OCaml et le C car tout ceci sera executable via les boutons de l'interface.
